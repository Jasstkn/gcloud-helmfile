name: build

on:
  push:
    paths-ignore:
      - README.md

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE="mariarti/gcloud-helmfile"
        VERSION="edge"
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ "$GITHUB_REF" == refs/heads/* ]]; then
          VERSION=$(echo "${GITHUB_REF#refs/heads/}" | sed -r 's#/+#-#g')
        elif [[ "$GITHUB_REF" == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:${GITHUB_SHA::8}"
        fi
        echo "::set-output name=sha_short::${GITHUB_SHA::8}"
        echo "::set-output name=version::${VERSION}"
        echo "::set-output name=tags::${TAGS}"
        echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.2.1
    - name: Login to DockerHub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        logout: false
    - name: Build and push
      uses: docker/build-push-action@v3.2.0
      with:
        push: true
        tags: ${{ steps.prep.outputs.tags }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/mariarti/gcloud-helmfile:${{ steps.prep.outputs.sha_short }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'
